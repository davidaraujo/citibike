# Kafka
bootstrap.servers=<cluster endpoint>
security.protocol=SASL_SSL
sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="<cluster api key>" password="<cluster api secret>";
ssl.endpoint.identification.algorithm=https
sasl.mechanism=PLAIN
num.partitions=6
replication.factor=3

# Schema Registry
schema.registry.url=<schema registry endpoint>
schema.registry.basic.auth.user.info=<schema registry key>:<schema registry secret>
basic.auth.credentials.source=USER_INFO

# General Bikeshare Feed Specification (GTFS)
# https://gbfs.citibikenyc.com/gbfs/gbfs.json
station.status.url=https://gbfs.citibikenyc.com/gbfs/en/station_status.json
station.information.url=https://gbfs.citibikenyc.com/gbfs/en/station_information.json
#bike.status.url=https://gbfs.citibikenyc.com/gbfs/en/free_bike_status.json
bike.status.url=https://gbfs.divvybikes.com/gbfs/en/free_bike_status.json
system.regions.url=https://gbfs.citibikenyc.com/gbfs/en/system_regions.json
system.alerts.url=https://gbfs.baywheels.com/gbfs/en/system_alerts.json

# Topics names
stations.raw.topic=stations.raw
stations.online.topic=stations.online
stations.offline.topic=stations.offline
stations.info.topic=stations.info
bike.status.topic=bikes
bike.disable.topic=bike.disabled
bike.enable.topic=bike.enabled
bike.noprecision.topic=bike.noprecision

# App names
stations.branch.app=CHECK_STATUS
bikes.producer.app=Bikes_feed

